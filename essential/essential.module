<?php

/*
 * This file is licensed under GPLv2+.
*/

/**
 * @file
 * Provides the basic information of signup program, such as provinces and nationalities.
 */

/**
 * Implementation of hook_help().
 */
function essential_help($path, $arg) {
  return;
}

function essential_init() {
	drupal_add_js(drupal_get_path('module', 'essential') .'/jquery.placeholder.js');
	drupal_add_js(
		'jQuery(document).ready(function(){'.
			'jQuery(":input[placeholder]").placeholder();'.
		'});',
		'inline'
	);

	drupal_add_js(drupal_get_path('module', 'essential') .'/jQuery.dPassword.js');
	/*
	if(!empty($_SERVER['HTTP_USER_AGENT']) && (!preg_match('/Mobile/', $_SERVER['HTTP_USER_AGENT']) && !preg_match('/Windows NT 6.1/', $_SERVER['HTTP_USER_AGENT'])) )
	drupal_add_js(
		'jQuery(document).ready(function(){'.
			'if(jQuery("input:password").length>0)'.
			'jQuery("input:password").dPassword();'.
		'});',
		'inline'
	);*/
}


/**
 * Implementation of province load helper function.
 */
function province_load($pid) {
	return db_select('vl_province','p')->condition('p.pid',$pid)->fields('p')->execute()->fetchObject();
}

/**
 * Implements hook_block_info().
 */
function essential_block_info() {
	$result=array();
	
	$result['weather'] = array(
		'info' => t('Weather'),
		'cache' => DRUPAL_CACHE_CUSTOM,
	);
	return $result;
}

/**
 * Implements hook_block_view().
 */
function essential_block_view($delta = '') {
	global $user;
	$block = array();
	switch ($delta) {
		case 'weather':
			$r=cache_get('block:essential:weather');
			if(!empty($r)) return $r->data;
			$r=json_decode(variable_get('current_weather',''))->results[0];
			$block['subject'] = t('Weather of @city',array('@city'=>$r->currentCity));
			$block['content'] = '';
			for($i=0;$i<3;$i++) {
				$date=$r->weather_data[$i]->date;
				$date=mb_substr($date, 0, 2);
				$block['content'].= sprintf('<strong>%s</strong>', $date);
				$block['content'].= sprintf('&nbsp; <img src="%s" title="%s" height="20"/>&nbsp;<img src="%s" title="%s" height="20"/>&nbsp;%s',
					$r->weather_data[$i]->dayPictureUrl, $r->weather_data[$i]->weather, $r->weather_data[$i]->nightPictureUrl, $r->weather_data[$i]->weather, $r->weather_data[$i]->temperature);
				$block['content'].= '<br/>';
			}
			cache_set('block:essential:weather', $block);
	}
	return $block;
}

/**
 * Implements hook_cron().
 */
function essential_cron() {
	$options=array('timeout'=>1);
	$valid_code=array('302','200');
	do {
		$r=drupal_http_request("http://api.map.baidu.com/telematics/v3/weather?location=%E5%8C%97%E4%BA%AC&output=json&ak=i2muDdpzDkmrf4bKlcVD0ekR",$options);
		if(isset($r->error)) return;
	} while ($r->code !='200');
	$c=variable_get('current_weather','');
	if($r->data!=$c) {
		variable_set('current_weather', $r->data);
		cache_clear_all('block:essential:weather','cache');
	}
}

function essential_username_alter(&$name, $account) {
	if($account->uid==1) $name=t('Administrator');
	$query=db_select('vl_research_sec','r')->condition('uid',$account->name)->fields('r',array('rname'));
	$r=$query->execute()->fetchObject();
	if($r)
		$name=$r->rname;
}
